{"ast":null,"code":"var _jsxFileName = \"/Users/shaunvalentine/Documents/Computer Programming/General Assembly/Personal Portfolio/Shaun Portfolio/src/components/home/Skills.jsx\";\nimport React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport SkillsTab from \"./SkillsTab\";\nimport Row from \"react-bootstrap/Row\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport { useScrollPosition } from \"../../hooks/useScrollPosition\";\n\nfunction Skills({\n  heading,\n  hardSkills,\n  softSkills\n}) {\n  const skillsTabRef = React.useRef();\n  const [isScrolled, setIsScrolled] = React.useState(false); //const navbarDimensions = useResizeObserver(navbarMenuRef);\n\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    if (!isScrolled && currPos.y - 400 < 0) setIsScrolled(true);\n  }, [], skillsTabRef);\n  return /*#__PURE__*/React.createElement(\"i\", {\n    class: \"huge html5 icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }) // <Jumbotron ref={skillsTabRef} fluid className=\"bg-white m-0\" id=\"skills\">\n  //   <Container className=\"p-5 \">\n  //     <h2 ref={skillsTabRef} className=\"display-4 pb-5 text-center\">\n  //       {heading}\n  //     </h2>\n  //     <Tabs\n  //       className=\"skills-tabs\"\n  //       defaultActiveKey=\"hard-skills\"\n  //       id=\"skills-tabs\"\n  //     >\n  //       <Tab\n  //         tabClassName=\"skills-tab lead\"\n  //         eventKey=\"hard-skills\"\n  //         title=\"Technical Skills\"\n  //       >\n  //         <Row className=\"pt-3 px-1\">\n  //           <SkillsTab skills={hardSkills} isScrolled={isScrolled} />\n  //         </Row>\n  //       </Tab>\n  //       <Tab\n  //         tabClassName=\"skills-tab lead\"\n  //         eventKey=\"soft-skills\"\n  //         title=\"Soft Skills\"\n  //       >\n  //         <Row className=\"pt-3 px-1\">\n  //           <SkillsTab skills={softSkills} isScrolled={isScrolled} />\n  //         </Row>\n  //       </Tab>\n  //     </Tabs>\n  //   </Container>\n  // </Jumbotron>\n  ;\n}\n\nexport default Skills;","map":{"version":3,"sources":["/Users/shaunvalentine/Documents/Computer Programming/General Assembly/Personal Portfolio/Shaun Portfolio/src/components/home/Skills.jsx"],"names":["React","Tab","Tabs","SkillsTab","Row","Jumbotron","Container","useScrollPosition","Skills","heading","hardSkills","softSkills","skillsTabRef","useRef","isScrolled","setIsScrolled","useState","prevPos","currPos","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,iBAArC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAhB,EAAqD;AACnD,QAAMC,YAAY,GAAGZ,KAAK,CAACa,MAAN,EAArB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAApC,CAFmD,CAGnD;;AAEAT,EAAAA,iBAAiB,CACf,CAAC;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,KAA0B;AACxB,QAAI,CAACJ,UAAD,IAAeI,OAAO,CAACC,CAAR,GAAY,GAAZ,GAAkB,CAArC,EAAwCJ,aAAa,CAAC,IAAD,CAAb;AACzC,GAHc,EAIf,EAJe,EAKfH,YALe,CAAjB;AAOA,sBACE;AAAG,IAAA,KAAK,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCF;AAkCD;;AAED,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport SkillsTab from \"./SkillsTab\";\nimport Row from \"react-bootstrap/Row\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport { useScrollPosition } from \"../../hooks/useScrollPosition\";\n\nfunction Skills({ heading, hardSkills, softSkills }) {\n  const skillsTabRef = React.useRef();\n  const [isScrolled, setIsScrolled] = React.useState(false);\n  //const navbarDimensions = useResizeObserver(navbarMenuRef);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!isScrolled && currPos.y - 400 < 0) setIsScrolled(true);\n    },\n    [],\n    skillsTabRef\n  );\n  return (\n    <i class=\"huge html5 icon\"></i>\n    // <Jumbotron ref={skillsTabRef} fluid className=\"bg-white m-0\" id=\"skills\">\n    //   <Container className=\"p-5 \">\n    //     <h2 ref={skillsTabRef} className=\"display-4 pb-5 text-center\">\n    //       {heading}\n    //     </h2>\n    //     <Tabs\n    //       className=\"skills-tabs\"\n    //       defaultActiveKey=\"hard-skills\"\n    //       id=\"skills-tabs\"\n    //     >\n    //       <Tab\n    //         tabClassName=\"skills-tab lead\"\n    //         eventKey=\"hard-skills\"\n    //         title=\"Technical Skills\"\n    //       >\n    //         <Row className=\"pt-3 px-1\">\n    //           <SkillsTab skills={hardSkills} isScrolled={isScrolled} />\n    //         </Row>\n    //       </Tab>\n    //       <Tab\n    //         tabClassName=\"skills-tab lead\"\n    //         eventKey=\"soft-skills\"\n    //         title=\"Soft Skills\"\n    //       >\n    //         <Row className=\"pt-3 px-1\">\n    //           <SkillsTab skills={softSkills} isScrolled={isScrolled} />\n    //         </Row>\n    //       </Tab>\n    //     </Tabs>\n    //   </Container>\n    // </Jumbotron>\n  );\n}\n\nexport default Skills;\n"]},"metadata":{},"sourceType":"module"}